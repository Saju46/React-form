{"ast":null,"code":"var _jsxFileName = \"/Users/saju/Downloads/React-forms/src/_components/Alert.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { alertService, AlertType } from '../_services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst propTypes = {\n  id: PropTypes.string,\n  fade: PropTypes.bool\n};\nconst defaultProps = {\n  id: 'default-alert',\n  fade: true\n};\nfunction Alert(_ref) {\n  _s();\n  let {\n    id,\n    fade\n  } = _ref;\n  const history = useHistory();\n  const [alerts, setAlerts] = useState([]);\n  useEffect(() => {\n    // subscribe to new alert notifications\n    const subscription = alertService.onAlert(id).subscribe(alert => {\n      // clear alerts when an empty alert is received\n      if (!alert.message) {\n        setAlerts(alerts => {\n          // filter out alerts without 'keepAfterRouteChange' flag\n          const filteredAlerts = alerts.filter(x => x.keepAfterRouteChange);\n\n          // remove 'keepAfterRouteChange' flag on the rest\n          filteredAlerts.forEach(x => delete x.keepAfterRouteChange);\n          return filteredAlerts;\n        });\n      } else {\n        // add alert to array\n        setAlerts(alerts => [...alerts, alert]);\n\n        // auto close alert if required\n        if (alert.autoClose) {\n          setTimeout(() => removeAlert(alert), 3000);\n        }\n      }\n    });\n\n    // clear alerts on location change\n    const historyUnlisten = history.listen(_ref2 => {\n      let {\n        pathname\n      } = _ref2;\n      // don't clear if pathname has trailing slash because this will be auto redirected again\n      if (pathname.endsWith('/')) return;\n      alertService.clear(id);\n    });\n\n    // clean up function that runs when the component unmounts\n    return () => {\n      // unsubscribe & unlisten to avoid memory leaks\n      subscription.unsubscribe();\n      historyUnlisten();\n    };\n  }, []);\n  function removeAlert(alert) {\n    if (fade) {\n      // fade out alert\n      const alertWithFade = {\n        ...alert,\n        fade: true\n      };\n      setAlerts(alerts => alerts.map(x => x === alert ? alertWithFade : x));\n\n      // remove alert after faded out\n      setTimeout(() => {\n        setAlerts(alerts => alerts.filter(x => x !== alertWithFade));\n      }, 250);\n    } else {\n      // remove alert\n      setAlerts(alerts => alerts.filter(x => x !== alert));\n    }\n  }\n  function cssClasses(alert) {\n    if (!alert) return;\n    const classes = ['alert', 'alert-dismissable'];\n    const alertTypeClass = {\n      [AlertType.Success]: 'alert alert-success',\n      [AlertType.Error]: 'alert alert-danger',\n      [AlertType.Info]: 'alert alert-info',\n      [AlertType.Warning]: 'alert alert-warning'\n    };\n    classes.push(alertTypeClass[alert.type]);\n    if (alert.fade) {\n      classes.push('fade');\n    }\n    return classes.join(' ');\n  }\n  if (!alerts.length) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-3\",\n      children: alerts.map((alert, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cssClasses(alert),\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"close\",\n          onClick: () => removeAlert(alert),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: alert.message\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n_s(Alert, \"fb7BLi9/HfnFhDOmJrZ9LXri8pQ=\", false, function () {\n  return [useHistory];\n});\n_c = Alert;\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport { Alert };\nvar _c;\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","PropTypes","alertService","AlertType","propTypes","id","string","fade","bool","defaultProps","Alert","history","alerts","setAlerts","subscription","onAlert","subscribe","alert","message","filteredAlerts","filter","x","keepAfterRouteChange","forEach","autoClose","setTimeout","removeAlert","historyUnlisten","listen","pathname","endsWith","clear","unsubscribe","alertWithFade","map","cssClasses","classes","alertTypeClass","Success","Error","Info","Warning","push","type","join","length","index","__html"],"sources":["/Users/saju/Downloads/React-forms/src/_components/Alert.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { alertService, AlertType } from '../_services';\r\n\r\nconst propTypes = {\r\n    id: PropTypes.string,\r\n    fade: PropTypes.bool\r\n};\r\n\r\nconst defaultProps = {\r\n    id: 'default-alert',\r\n    fade: true\r\n};\r\n\r\nfunction Alert({ id, fade }) {\r\n    const history = useHistory();\r\n    const [alerts, setAlerts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // subscribe to new alert notifications\r\n        const subscription = alertService.onAlert(id)\r\n            .subscribe(alert => {\r\n                // clear alerts when an empty alert is received\r\n                if (!alert.message) {\r\n                    setAlerts(alerts => {\r\n                        // filter out alerts without 'keepAfterRouteChange' flag\r\n                        const filteredAlerts = alerts.filter(x => x.keepAfterRouteChange);\r\n\r\n                        // remove 'keepAfterRouteChange' flag on the rest\r\n                        filteredAlerts.forEach(x => delete x.keepAfterRouteChange);\r\n                        return filteredAlerts;\r\n                    });\r\n                } else {\r\n                    // add alert to array\r\n                    setAlerts(alerts => ([...alerts, alert]));\r\n\r\n                    // auto close alert if required\r\n                    if (alert.autoClose) {\r\n                        setTimeout(() => removeAlert(alert), 3000);\r\n                    }\r\n                }\r\n            });\r\n\r\n        // clear alerts on location change\r\n        const historyUnlisten = history.listen(({ pathname }) => {\r\n            // don't clear if pathname has trailing slash because this will be auto redirected again\r\n            if (pathname.endsWith('/')) return;\r\n\r\n            alertService.clear(id);\r\n        });\r\n\r\n        // clean up function that runs when the component unmounts\r\n        return () => {\r\n            // unsubscribe & unlisten to avoid memory leaks\r\n            subscription.unsubscribe();\r\n            historyUnlisten();\r\n        };\r\n    }, []);\r\n\r\n    function removeAlert(alert) {\r\n        if (fade) {\r\n            // fade out alert\r\n            const alertWithFade = { ...alert, fade: true };\r\n            setAlerts(alerts => alerts.map(x => x === alert ? alertWithFade : x));\r\n\r\n            // remove alert after faded out\r\n            setTimeout(() => {\r\n                setAlerts(alerts => alerts.filter(x => x !== alertWithFade));\r\n            }, 250);\r\n        } else {\r\n            // remove alert\r\n            setAlerts(alerts => alerts.filter(x => x !== alert));\r\n        }\r\n    }\r\n\r\n    function cssClasses(alert) {\r\n        if (!alert) return;\r\n\r\n        const classes = ['alert', 'alert-dismissable'];\r\n                \r\n        const alertTypeClass = {\r\n            [AlertType.Success]: 'alert alert-success',\r\n            [AlertType.Error]: 'alert alert-danger',\r\n            [AlertType.Info]: 'alert alert-info',\r\n            [AlertType.Warning]: 'alert alert-warning'\r\n        }\r\n\r\n        classes.push(alertTypeClass[alert.type]);\r\n\r\n        if (alert.fade) {\r\n            classes.push('fade');\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n\r\n    if (!alerts.length) return null;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"m-3\">\r\n                {alerts.map((alert, index) =>\r\n                    <div key={index} className={cssClasses(alert)}>\r\n                        <a className=\"close\" onClick={() => removeAlert(alert)}>&times;</a>\r\n                        <span dangerouslySetInnerHTML={{__html: alert.message}}></span>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nAlert.propTypes = propTypes;\r\nAlert.defaultProps = defaultProps;\r\nexport { Alert };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,YAAY,EAAEC,SAAS,QAAQ,cAAc;AAAC;AAEvD,MAAMC,SAAS,GAAG;EACdC,EAAE,EAAEJ,SAAS,CAACK,MAAM;EACpBC,IAAI,EAAEN,SAAS,CAACO;AACpB,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBJ,EAAE,EAAE,eAAe;EACnBE,IAAI,EAAE;AACV,CAAC;AAED,SAASG,KAAK,OAAe;EAAA;EAAA,IAAd;IAAEL,EAAE;IAAEE;EAAK,CAAC;EACvB,MAAMI,OAAO,GAAGX,UAAU,EAAE;EAC5B,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMe,YAAY,GAAGZ,YAAY,CAACa,OAAO,CAACV,EAAE,CAAC,CACxCW,SAAS,CAACC,KAAK,IAAI;MAChB;MACA,IAAI,CAACA,KAAK,CAACC,OAAO,EAAE;QAChBL,SAAS,CAACD,MAAM,IAAI;UAChB;UACA,MAAMO,cAAc,GAAGP,MAAM,CAACQ,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,oBAAoB,CAAC;;UAEjE;UACAH,cAAc,CAACI,OAAO,CAACF,CAAC,IAAI,OAAOA,CAAC,CAACC,oBAAoB,CAAC;UAC1D,OAAOH,cAAc;QACzB,CAAC,CAAC;MACN,CAAC,MAAM;QACH;QACAN,SAAS,CAACD,MAAM,IAAK,CAAC,GAAGA,MAAM,EAAEK,KAAK,CAAE,CAAC;;QAEzC;QACA,IAAIA,KAAK,CAACO,SAAS,EAAE;UACjBC,UAAU,CAAC,MAAMC,WAAW,CAACT,KAAK,CAAC,EAAE,IAAI,CAAC;QAC9C;MACJ;IACJ,CAAC,CAAC;;IAEN;IACA,MAAMU,eAAe,GAAGhB,OAAO,CAACiB,MAAM,CAAC,SAAkB;MAAA,IAAjB;QAAEC;MAAS,CAAC;MAChD;MACA,IAAIA,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;MAE5B5B,YAAY,CAAC6B,KAAK,CAAC1B,EAAE,CAAC;IAC1B,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACT;MACAS,YAAY,CAACkB,WAAW,EAAE;MAC1BL,eAAe,EAAE;IACrB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,SAASD,WAAW,CAACT,KAAK,EAAE;IACxB,IAAIV,IAAI,EAAE;MACN;MACA,MAAM0B,aAAa,GAAG;QAAE,GAAGhB,KAAK;QAAEV,IAAI,EAAE;MAAK,CAAC;MAC9CM,SAAS,CAACD,MAAM,IAAIA,MAAM,CAACsB,GAAG,CAACb,CAAC,IAAIA,CAAC,KAAKJ,KAAK,GAAGgB,aAAa,GAAGZ,CAAC,CAAC,CAAC;;MAErE;MACAI,UAAU,CAAC,MAAM;QACbZ,SAAS,CAACD,MAAM,IAAIA,MAAM,CAACQ,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKY,aAAa,CAAC,CAAC;MAChE,CAAC,EAAE,GAAG,CAAC;IACX,CAAC,MAAM;MACH;MACApB,SAAS,CAACD,MAAM,IAAIA,MAAM,CAACQ,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,KAAK,CAAC,CAAC;IACxD;EACJ;EAEA,SAASkB,UAAU,CAAClB,KAAK,EAAE;IACvB,IAAI,CAACA,KAAK,EAAE;IAEZ,MAAMmB,OAAO,GAAG,CAAC,OAAO,EAAE,mBAAmB,CAAC;IAE9C,MAAMC,cAAc,GAAG;MACnB,CAAClC,SAAS,CAACmC,OAAO,GAAG,qBAAqB;MAC1C,CAACnC,SAAS,CAACoC,KAAK,GAAG,oBAAoB;MACvC,CAACpC,SAAS,CAACqC,IAAI,GAAG,kBAAkB;MACpC,CAACrC,SAAS,CAACsC,OAAO,GAAG;IACzB,CAAC;IAEDL,OAAO,CAACM,IAAI,CAACL,cAAc,CAACpB,KAAK,CAAC0B,IAAI,CAAC,CAAC;IAExC,IAAI1B,KAAK,CAACV,IAAI,EAAE;MACZ6B,OAAO,CAACM,IAAI,CAAC,MAAM,CAAC;IACxB;IAEA,OAAON,OAAO,CAACQ,IAAI,CAAC,GAAG,CAAC;EAC5B;EAEA,IAAI,CAAChC,MAAM,CAACiC,MAAM,EAAE,OAAO,IAAI;EAE/B,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,uBACtB;MAAK,SAAS,EAAC,KAAK;MAAA,UACfjC,MAAM,CAACsB,GAAG,CAAC,CAACjB,KAAK,EAAE6B,KAAK,kBACrB;QAAiB,SAAS,EAAEX,UAAU,CAAClB,KAAK,CAAE;QAAA,wBAC1C;UAAG,SAAS,EAAC,OAAO;UAAC,OAAO,EAAE,MAAMS,WAAW,CAACT,KAAK,CAAE;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAI,eACnE;UAAM,uBAAuB,EAAE;YAAC8B,MAAM,EAAE9B,KAAK,CAACC;UAAO;QAAE;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA,GAFzD4B,KAAK;QAAA;QAAA;QAAA;MAAA,QAGT;IACT;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAhGQpC,KAAK;EAAA,QACMV,UAAU;AAAA;AAAA,KADrBU,KAAK;AAkGdA,KAAK,CAACN,SAAS,GAAGA,SAAS;AAC3BM,KAAK,CAACD,YAAY,GAAGA,YAAY;AACjC,SAASC,KAAK;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}